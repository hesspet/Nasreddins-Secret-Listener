using CommunityToolkit.Mvvm.ComponentModel;
using Microsoft.Maui.Storage;

namespace NasreddinsSecretListener.Companion.ViewModels;

public partial class SettingsViewModel : ObservableObject
{
    public SettingsViewModel() => Load();

    public int HapticMs
    {
        get => _hapticMs;
        set
        {
            var v = Math.Clamp(value, 80, 400);
            if (SetProperty(ref _hapticMs, v))
                Preferences.Set(HapticMsKey, v);
        }
    }

    public void Load()
    {
        VibrateOnEarly = Preferences.Get(VibrateOnEarlyKey, DftVibrateOnEarly);
        VibrateOnConfirmed = Preferences.Get(VibrateOnConfirmedKey, DftVibrateOnConfirmed);
        DoublePulseForConfirmed = Preferences.Get(DoublePulseForConfirmedKey, DftDoublePulseForConfirmed);
        AutoConnectMyDevice = Preferences.Get(AutoConnectMyDeviceKey, DftAutoConnectMyDevice); // *
        ShowOnlyNsl = Preferences.Get(ShowOnlyNslKey, DftShowOnlyNsl);
        HapticMs = Preferences.Get(HapticMsKey, DftHapticMs);
    }

    private const string AutoConnectMyDeviceKey = "settings.autoconnect";

    private const bool DftAutoConnectMyDevice = false;

    private const bool DftDoublePulseForConfirmed = true;

    private const int DftHapticMs = 180;

    private const bool DftShowOnlyNsl = true;

    private const bool DftVibrateOnConfirmed = true;

    // Defaults
    private const bool DftVibrateOnEarly = true;

    private const string DoublePulseForConfirmedKey = "settings.vibrate.doublepulse";

    private const string HapticMsKey = "settings.haptic.ms";

    private const string ShowOnlyNslKey = "settings.shownsl";

    private const string VibrateOnConfirmedKey = "settings.vibrate.confirmed";

    // Preference Keys
    private const string VibrateOnEarlyKey = "settings.vibrate.early";

    // Begrenze sinnvoll (UI-Slider)
    private int _hapticMs;

    [ObservableProperty] private bool autoConnectMyDevice;
    [ObservableProperty] private bool doublePulseForConfirmed;
    [ObservableProperty] private bool showOnlyNsl;
    [ObservableProperty] private bool vibrateOnConfirmed;
    [ObservableProperty] private bool vibrateOnEarly; // 80..400 ms (Hinweis für Slider-Bereich)

    // <Auto-Generated>
     partial void OnAutoConnectMyDeviceChanged(bool value) => Preferences.Set(AutoConnectMyDeviceKey, value);

     partial void OnDoublePulseForConfirmedChanged(bool value) => Preferences.Set(DoublePulseForConfirmedKey, value);

     partial void OnShowOnlyNslChanged(bool value) => Preferences.Set(ShowOnlyNslKey, value);

     partial void OnVibrateOnConfirmedChanged(bool value) => Preferences.Set(VibrateOnConfirmedKey, value);

     partial void OnVibrateOnEarlyChanged(bool value) => Preferences.Set(VibrateOnEarlyKey, value);

    // </Auto-Generated>
}